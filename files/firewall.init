#!/bin/sh /etc/rc.common

START=19
USE_PROCD=1
QUIET=""

. /lib/functions.sh

rematch_duidip6()
{
	duid_to_ip6() {
		local duid ip6
		config_get duid "$1" duid
		if [ -n "$duid" ]; then
			ip6=$( grep "$duid" /tmp/hosts/odhcpd | head -1 | awk '{print$NF}')
			[ -n "$ip6" ] && uci set firewall."$1".dest_ip="$ip6"
		fi
	}
	config_load firewall
	config_foreach duid_to_ip6 rule
	uci commit firewall
}

reindex_dmzhost()
{
	uci -q get firewall.dmzhost >/dev/null || return

	local enabled reload path cfgno
	enabled=$(uci -q get firewall.dmzhost.enabled)
	[ "$enabled" == "0" ] && return
	path=$(uci -q get firewall.dmzhost.path)
	uci delete firewall.dmzhost
	cfgno=$(uci -q add firewall include)
	uci rename firewall.$cfgno=dmzhost
	uci -q set firewall.dmzhost.path="$path"
	uci -q set firewall.dmzhost.reload="1"
	uci commit firewall
}

validate_firewall_redirect()
{
	uci_validate_section firewall redirect "${1}" \
		'proto:or(uinteger, string)' \
		'src:string' \
		'src_ip:cidr' \
		'src_dport:or(port, portrange)' \
		'dest:string' \
		'dest_ip:cidr' \
		'dest_port:or(port, portrange)' \
		'target:or("SNAT", "DNAT")'
}

validate_firewall_rule()
{
	uci_validate_section firewall rule "${1}" \
		'proto:or(uinteger, string)' \
		'src:string' \
		'dest:string' \
		'src_port:or(port, portrange)' \
		'dest_port:or(port, portrange)' \
		'target:string'
}

service_triggers() {
	procd_add_reload_trigger firewall	

	procd_open_validate
	validate_firewall_redirect
	validate_firewall_rule
	procd_close_validate
}

restart() {
	fw3 restart
}

start_service() {
	fw3 ${QUIET} start
}

stop_service() {
	fw3 flush
}

reload_service() {
	fw3 reload
}

boot() {
	# Be silent on boot, firewall might be started by hotplug already,
	# so don't complain in syslog.
	QUIET=-q
	start
}

rematch_duidip6
reindex_dmzhost
